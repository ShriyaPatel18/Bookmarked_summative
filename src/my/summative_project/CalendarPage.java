/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package my.summative_project;
import java.util.Calendar;
import javax.swing.JButton;
import javax.swing.JLabel;
import java.awt.event.*;
import java.io.*;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
/**
 *
 * @author spate8
 */
public class CalendarPage extends javax.swing.JFrame {
    
    String dir = System.getProperty("user.dir");
    String eventsName = dir + "\\src\\my\\summative_project\\Calendar.txt";
    ArrayList<String> eventsList = new ArrayList<>();
    File calendarFile = new File(eventsName);
    String temporaryString = "";
    String longString = "";
    int current;
    int month_number;
    int year;
    String test;

    /**
     * Creates new form CalendarPage
     */
    int numOfDays;
    
    public CalendarPage() {
        initComponents();
        try(Scanner readFile = new Scanner (calendarFile)){
            while (readFile.hasNext()){
                //update book into temporary String and update accumulated String before adding to list
                temporaryString = readFile.nextLine();
                longString = longString + temporaryString + "\n";
                eventsList.add(temporaryString); 
            }
        }
        catch (FileNotFoundException e){
            e.printStackTrace();
        }
         
        
        int number = 1;        
        int day = setDate();
        JButton[] array = new JButton[30];
        JButton button;
        String month_name;
        switch(month_number){
            case 0: 
               month_name = "January";
               break;
            case 1: 
               month_name = "Febuary";
               break;
            case 2: 
               month_name = "March";
               break;
            case 3: 
               month_name = "April";
               break;
            case 4: 
               month_name = "May";
               break;
            case 5: 
               month_name = "June";
               break;
            case 6: 
               month_name = "July";
               break;
            case 7: 
               month_name = "August";
               break;
            case 8: 
               month_name = "September";
               break;
            case 9: 
               month_name = "October";
               break;
            case 10: 
               month_name = "November";
               break;
            case 11: 
               month_name = "December";
               break;
            default:
                month_name = "month not found";
        }
      Title.setText(month_name + ", " + year);
        //populate calendar grid with buttons and labels
        for (int x=1; x<=42; x++){
            //labels to fill space
            if (x<day || number>numOfDays){
              calendarGrid.add(new JLabel(" "));
            }
            //buttons for each days of the month
            else{ 
                button = new JButton(Integer.toString(number));
                int dayEvent = Integer.valueOf(button.getText());
                //when button is pressed
                button.addActionListener(new ActionListener(){
                    public void actionPerformed(ActionEvent e){
                        current = dayEvent;
                        getEvent(dayEvent);
                    }
                });
                calendarGrid.add(button);
                array[number-1]=button;
                number++;    
            }
        }
    }
    
    
    public void getEvent(int dayNum){
        //display events for clicked day
        String text = eventsList.get(dayNum);
        text=text.replaceAll(",", "\n");
        events.setText(text);
    }
    
    
    public int setDate(){      
        Calendar calendar = Calendar.getInstance();
        
        calendar.set(Calendar.DAY_OF_MONTH, 1);
        numOfDays = calendar.getActualMaximum(Calendar.DATE);
        month_number = calendar.get(Calendar.MONTH);
        year = calendar.get(Calendar.YEAR);
        
        //new month, reset planner
        if(Integer.valueOf(eventsList.get(0)) != month_number){
            eventsList.set(0,Integer.toString(month_number));
            System.out.println(month_number);
            for(int i = 1; i < eventsList.size(); i++){
            
                eventsList.set(i,"Nothing Planned");
            }
        }
        return calendar.get(Calendar.DAY_OF_WEEK);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        calendarPanel = new javax.swing.JPanel();
        calendarGrid = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        Title = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        home = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        events = new javax.swing.JTextArea();
        calendarSave = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        calendarPanel.setBackground(new java.awt.Color(249, 240, 230));
        calendarPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Calendar", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 18))); // NOI18N
        calendarPanel.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N

        calendarGrid.setBackground(new java.awt.Color(207, 226, 243));
        calendarGrid.setLayout(new java.awt.GridLayout(6, 7));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel1.setText("Sun");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel2.setText("Mon");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel3.setText("Tue");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel4.setText("Wed");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel5.setText("Thu");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel6.setText("Fri");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel7.setText("Sat");

        Title.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        Title.setText("June, 2023");

        javax.swing.GroupLayout calendarPanelLayout = new javax.swing.GroupLayout(calendarPanel);
        calendarPanel.setLayout(calendarPanelLayout);
        calendarPanelLayout.setHorizontalGroup(
            calendarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, calendarPanelLayout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addComponent(calendarGrid, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
            .addGroup(calendarPanelLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addComponent(jLabel2)
                .addGap(32, 32, 32)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(32, 32, 32)
                .addComponent(jLabel5)
                .addGap(36, 36, 36)
                .addComponent(jLabel6)
                .addGap(39, 39, 39)
                .addComponent(jLabel7)
                .addGap(37, 37, 37))
            .addGroup(calendarPanelLayout.createSequentialGroup()
                .addGap(164, 164, 164)
                .addComponent(Title)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        calendarPanelLayout.setVerticalGroup(
            calendarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(calendarPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(Title)
                .addGap(2, 2, 2)
                .addGroup(calendarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(calendarGrid, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(207, 226, 243));

        home.setBackground(new java.awt.Color(234, 153, 153));
        home.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        home.setText("Main Menu\n");
        home.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel9.setText("Events");

        events.setColumns(20);
        events.setLineWrap(true);
        events.setRows(5);
        jScrollPane1.setViewportView(events);

        calendarSave.setBackground(new java.awt.Color(207, 226, 243));
        calendarSave.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        calendarSave.setText("Save");
        calendarSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calendarSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel9)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(calendarSave)
                        .addGap(45, 45, 45))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(home)
                        .addGap(34, 34, 34))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(calendarSave, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(home, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(calendarPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addGap(0, 432, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(calendarPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void homeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeActionPerformed
        // TODO add your handling code here:
        MainPage main = new MainPage();
        main.setVisible(true);
        dispose();
    }//GEN-LAST:event_homeActionPerformed
    
    /*
    private void wishSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wishSaveActionPerformed

    }//GEN-LAST:event_wishSaveActionPerformed
    */
    
    private void calendarSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calendarSaveActionPerformed
        //update event info + covert multiline inputs into 1 line string
        test = events.getText();     
        test=test.replaceAll("[\r\n]+", ", ");
        eventsList.set(current,test);
        
        try
        {
            FileWriter writeFile = new FileWriter(dir + "\\src\\my\\summative_project\\Calendar.txt");
            BufferedWriter buffWrite = new BufferedWriter(writeFile);
            for(int i = 0; i < eventsList.size(); i++)
            {
                buffWrite.write(eventsList.get(i));
                buffWrite.newLine();
            }
          buffWrite.close();
        }
        catch (FileNotFoundException e){
            System.out.println("File not found");
        } 
        catch (IOException ex) {
            Logger.getLogger(FavouritesPage.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_calendarSaveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CalendarPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CalendarPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CalendarPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CalendarPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CalendarPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Title;
    private javax.swing.JPanel calendarGrid;
    private javax.swing.JPanel calendarPanel;
    private javax.swing.JButton calendarSave;
    private javax.swing.JTextArea events;
    private javax.swing.JButton home;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
